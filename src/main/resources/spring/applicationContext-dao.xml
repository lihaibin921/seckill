<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 数据库连接池 -->
    <!-- 创建数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${db.driver}"></property>
        <property name="url" value="${db.url}"></property>
        <property name="username" value="${db.username}"></property>
        <property name="password" value="${db.password}"></property>

        <!--最大容量 -->
        <property name="maxActive" value="30"></property>
        <!--最小容量 -->
        <property name="minIdle" value="10"></property>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
    </bean>

    <!-- 配置 sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"></property>

        <!-- 配置mybatis 全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>

        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="org.seckill.entity"></property>

        <!-- 扫描 mapper.xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!-- 配置扫描dao接口包 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlsessionfactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>

        <!-- 扫描dao接口包 -->
        <property name="basePackage" value="org.seckill.dao"></property>
    </bean>

    <!--
        配置redisPool 这里我们的redisPool是根据构造方法生成的  所以直接配置redisDao就行
        最好是提供一个jedis的接口 然后将jedisPool注入实现类
        再根据类型注入jedis(解耦合啊 偷懒了)
        配置文件也应该单独写出来的
    -->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg name="host" value="192.168.198.129"></constructor-arg>
        <constructor-arg name="port" value="6379"></constructor-arg>
    </bean>

</beans>